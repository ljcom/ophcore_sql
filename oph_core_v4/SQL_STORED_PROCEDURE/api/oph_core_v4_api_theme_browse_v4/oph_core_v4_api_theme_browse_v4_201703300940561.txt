
CREATE procedure [api].[theme_browse_v4]
	@hostGUID uniqueidentifier,
	@code varchar(100), 
	@sqlFilter varchar(max)='', 
	@searchText varchar(max)='', 
	@pgNo int=1, 
	@nbRows int=10,
	@sortOrder varchar(max)='', 
	@stateid varchar(10)='', 
	@isdebug int=0
as

	--set userGUID and accountGUID
	declare @userGUID uniqueidentifier, @accountGUID uniqueidentifier

	select @userGUID=a.userGUID, @accountGUID=b.accountGUID 
	from userhost a 
		inner join [user] b on a.userguid=b.userguid
	where hostguid=@hostguid

	--check db location
	declare @db varchar(10), @settingMode varchar(1)
	set @db=[api].[fn_checkDB](@code)

	select @settingMode=api.settingmode(settingMode) 
	from modl 
	where moduleid=@code and AccountGUID=@accountGUID

	declare @totalPages int=0

	declare @sqlstr nvarchar(max)

	if @settingMode='C' begin
		set @sqlstr='select * from '+@code	
	end 
	else begin
		select a.moduleGUID, a.docGUID
		--into #browserows
		from oph_core.dbo.docm a
		where moduleguid=(select moduleguid from modl where moduleid=@code)
	end

	select b.formGUID, b.fextKey, b.fextString, 0 mandatory 
	into #browsefields
	from oph_modules.dbo.oph_form a
		inner join oph_modules.dbo.oph_formfext b
			on a.formGUID=b.formGUID
	where moduleid=@code

	declare @browsexml xml
	select @browsexml = 
		--info
		--<info>
		--  <code>VEND</code>
		--  <description>New Vendor Request</description>
		--  <state code="0">DRAFT</state>
		--  <searchText />
		--  <nbRows>10</nbRows>
		--  <pageNo>1</pageNo>
		--  <nbPages>1</nbPages>
		(select (select moduleid code, ModuleDescription description, --@searchText searchText, @pgNo pageNo, @nbRows nbRows, @totalPages nbPages,
		--permission
		--  <permission>
		--	<allowAdd>1</allowAdd>
		--	<allowEdit>1</allowEdit>
		--	<allowDelete>1</allowDelete>
		--	<allowWipe>1</allowWipe>
		--	<allowArchieve>1</allowArchieve>
		--	<allowBatchInsert>1</allowBatchInsert>
		--  </permission>
			(select 
				(select infovalue as 'AllowAdd' from modlinfo where infokey = 'AllowAdd' and moduleguid = modl.moduleguid),
				(select infovalue as 'AllowBatch' from modlinfo where infokey = 'AllowBatch' and moduleguid = modl.moduleguid),
				(select infovalue as 'AllowBrowse' from modlinfo where infokey = 'AllowBrowse' and moduleguid = modl.moduleguid),
				(select infovalue as 'AllowDelete' from modlinfo where infokey = 'AllowDelete' and moduleguid = modl.moduleguid), 
				(select infovalue as 'AllowEdit' from modlinfo where infokey = 'AllowEdit' and moduleguid = modl.moduleguid), 
				(select infovalue as 'AllowHold' from modlinfo where infokey = 'AllowHold' and moduleguid = modl.moduleguid), 
				(select infovalue as 'AllowWipe' from modlinfo where infokey = 'AllowWipe' and moduleguid = modl.moduleguid)
			for xml path('permission'),type), 
		--states
		--  <states>
		--	<state code="100" name="Pending">
		--	  <substates>
		--		<substate code="0">Draft</substate>
		--		<substate code="100">On Approval</substate>
		--		<substate code="300">Rejected</substate>
		--		<substate code="399">Pending Release</substate>
		--	  </substates>
		--	</state>
		--	<state code="400" name="Approved">
		--	  <substates>
		--		<substate code="400">Approved</substate>
		--	  </substates>
		--	</state>
		--	<state code="500" name="Closed">
		--	  <substates>
		--		<substate code="500">Closed</substate>
		--	  </substates>
		--	</state>
		--	<state code="999" name="Deleted">
		--	  <substates>
		--		<substate code="999">Deleted</substate>
		--	  </substates>
		--	</state>
		--  </states>
			(
				select stata.statecode as '@code',statedesc as '@name',(select stateid as '@code',statename+''  from modlstat statb 
				where StateCode = stata.StateCode and
				ModuleGUID=modl.moduleguid for xml path('substate'),type)  
				from (select distinct statecode,moduleguid,statedesc from modlstat where ModuleGUID=modl.moduleguid) as stata
				for xml path('state'),type
	
			) as States
		from modl 
		where moduleid=@code
		for xml path(''), elements, type
			) info, 
		--</info>
		--columns
		--<columns>
		--  <column fieldName="DocNo" mandatory="1" width="80">Doc No</column>
		--  <column fieldName="RefNo" mandatory="1" width="80">Ref No</column>
		--  <column fieldName="DocDate" mandatory="1" width="80">Date</column>
		--  <column fieldName="VendorNo" mandatory="0">Vendor No</column>
		--  <column fieldName="VendorName" mandatory="0">Vendor Name</column>
		--  <column fieldName="PurposeDescription" mandatory="0">Purpose Description</column>
		--  <column fieldName="docStatus" mandatory="0" docStatus="1" width="80" text-align="center">Status</column>
		--</columns>
		(select top 1000 fieldname '@fieldName', mandatory '@mandatory', width '@width', titleCaption+''
		from (
			select 'DocNo' fieldName, 1 mandatory, 80 width,-3 colOrder, 'Doc No' titleCaption union all
			select 'RefNo', 1, 80, -2, 'Ref No' union all
			select 'DocDate', 1, 80, 1, 'Date' union all
			select colKey, 0, 0, colOrder, titleCaption  
			from modlcolm a 
				inner join modl b
					on a.moduleguid=b.ModuleGUID
			where b.moduleid=@code) x
		order by colOrder
		for xml path('column'), elements, type) columns, 
		--rows
		--<rows>
		--  <row code="VEND" GUID="CF549076-2773-4FF8-8129-230B6263479C" edit="1" delete="1" wipe="0" restore="0" force="0" reopen="0" approve="0" reject="0">
		--    <fields>
		--	    <field caption="Doc No" mandatory="1">VQ10B0017</field>
		--	    <field caption="Ref No" mandatory="1">VQ10B0007</field>
		--	    <field caption="Doc Date" mandatory="1">01/01/2015</field>
		--	    <field caption="Vendor No">VENDORID</field>
		--	    <field caption="Vendor Name">PT VENDOR NAME</field>
		--	    <field caption="Purpose Description">THIS IS COMMENT</field>
		--    </fields>
		--	  <docStatus labelColor="success" title="RELEASE">Open/Draft. You cannot generate any Vendor since you don''t have any approval level above you. Please make sure y</docStatus>
		--	  <approvals>
		--      <approval></approval>
		--    </approvals>
		--	  <talks>
		--	    <talk GUID="555209CB-E2E4-47C1-8B09-4025D8DE2349">
		--		  <Message>88</Message>
		--		  <userid>Sam</userid>
		--		  <username>samuel</username>
		--		  <sentdate>05 Dec 2016</sentdate>
		--	    </talk>
		--	    <talk GUID="EF39B46F-4A5F-425D-AF8B-E6C80C39B765">
		--		  <Message>0000</Message>
		--		  <userid>Sam</userid>
		--		  <username>samuel</username>
		--		  <sentdate>05 Dec 2016</sentdate>
		--	    </talk>
		--	  </talks>
		--  </row>
		--</rows>
		(select moduleid '@code', formGUID '@GUID', 0 '@edit', 0 '@delete', 0 '@wipe', 0 '@restore', 0 '@force', 0 '@reopen', 0 '@approve', 0 '@reject', 
			(select fextKey '@caption', mandatory '@mandatory', fextString+'' 
			from #browsefields y
			where y.formGUID=x.formGUID
			for xml path('field'), elements, type) fields
		from #browserows x
		for xml path('row'), elements, type) content
		for xml path(''), elements, type)

	--select @browsexml


	
	select (
		select (
			--info
			select (
				--account
				select accountid account from acct a
					inner join modl b
						on a.AccountGUID=b.AccountGUID
				where moduleid=@code
				) account, 
				--themeFolder
				(select infoValue  from acctinfo a
					inner join modl b
						on a.AccountGUID=b.AccountGUID
				where moduleid=@code
					and infoKey='themename') 'themeFolder',
				--title
				(select ModuleDescription from modl where moduleid=@code) title, 
				--code
				(select moduleid id, ModuleDescription name from modl where moduleid='HRRR' for xml path(''), elements, type) code, 
				--user
				(select userId, userName, '' userURL, hostGUID 
				from userhost a
					inner join [user] b
						on a.userguid=b.userguid
				where hostguid=@hostGUID
				for xml path(''), elements, type) [user]	 
			for xml path(''), elements, type
			) info, 
			--menus
			(select menucode '@code', 
				--submenus
				(select [type] '@type', Tag '@tag', SubMenuDescription [MenuDescription],  caption,  url pageURL, icon_fa fa, icon_url icon_url, 
					--submenus
					(select [type] '@type', Tag '@tag', SubMenuDescription [MenuDescription], caption,  url pageURL, icon_fa fa, icon_url icon_url
					from menusmnu c
					where c.uppersubmenuGUID=b.MenudetailGUID
					order by c.OrderNo, c.caption
					for xml path('submenu'), elements, type) submenus
				from menusmnu b
				where b.menuGUID=a.MenuGUID and b.upperSubmenuGUID is null
				order by OrderNo, b.caption
				for xml path('submenu'), elements, type) submenus
			from menu a
				inner join modl b
					on a.AccountGUID=b.AccountGUID
			where moduleid=@code
			order by OrderNo asc
			for xml path('menu'), elements, type) menus
		for xml path(''), elements, type
		) header,
		(select '' dashboard, @browsexml [browse], '' form
		for xml path('bodyContent'), elements, type) body,
		'' footer
	for xml path('sqroot')


