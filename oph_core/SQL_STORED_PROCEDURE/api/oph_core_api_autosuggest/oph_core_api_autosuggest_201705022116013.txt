CREATE procedure [api].[autosuggest] @accountid varchar(50), @dbcore varchar(50), 
	@code nvarchar(50), @guid nvarchar(50), @id nvarchar(50), @name nvarchar(50), @searchtext nvarchar(max)='',
	@wf1 nvarchar(max)='', @wf1value nvarchar(max)='', @wf2 nvarchar(max)='', @wf2value nvarchar(max)='', @isdebug bit=0
--WITH ENCRYPTION 
AS
	declare @ver varchar(10), @db varchar(50), @typecode varchar(1)
	exec gen.getDBInfo @accountid, @dbcore, @code, @ver output, @db output, @typecode output
	
	if @isdebug=1 print 'db =' +@db
	if @isdebug=1 print 'code =' +@code
	if @isdebug=1 print 'name =' +@name
	if @isdebug=1 print 'id =' +@id
	if @isdebug=1 print 'value =' +@guid
	if @isdebug=1 print 'ver =' +@ver

	if @name=@id set @name =''''''

	declare @sx varchar(max)
	declare @sxx varchar(max)
	set @searchtext=ltrim(rtrim(@searchtext))
	set @sx=replace(@searchText, '*', '%'' or value like ''%')
	set @sxx='value like ''%'+@sx+'%'''

	set @sx=replace(@searchText, '*', '%'' or (id+'' ''+name+'' '' + id) like ''%')
	set @sxx=@sxx+' or (id+'' ''+name+'' '' + id) like ''%'+@sx+'%'''

	declare @schema nvarchar(10)
	if @ver=3.0 set @schema='oph'
	if @ver=4.0 set @schema='dbo'

	declare @sqlstr nvarchar(max) = 'use '+@db+ '
	
		select 
			isnull((	
				select top 10 value,caption 
				from (
					select '+@guid+' value, 
						isnull('+@id+','''')'+
						case when isnull(@name,'') ='' then '' 
							else ' + case when '+@id+' is not null and '+isnull(@name,'')+' is not null then '' - ''+ '+ @name +' else '''' end' end + ' as caption,
						isnull('+@id+','''') id, '+case when isnull(@name,'')='' then '''''' else ' '+isnull(@name,'') end+ ' name 
						'+case when @wf1 !='' then ',
						'+@wf1 else '' end+case when @wf2 !='' then ','+@wf2 else '' end +'  
					from '+@schema+'.['+@code +']
					) OPT
				where ('+@sxx+') '+
					case when @wf1 !='' then '
						and '+@wf1+' = '+''''+@wf1value+'''' else '' end+
					case when @wf2 !='' then '
						and '+@wf2+' = '+''''+@wf2value+'''' else '' end +'  
				order by id
				for xml path(''option''), type, root(''sqroot'')
				),
				''<sqroot><option><value>NULL</value> <caption>No Result Found</caption></option></sqroot>'')'

	if @isdebug=1 print @sqlstr
	exec (@sqlstr)


