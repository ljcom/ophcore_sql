

CREATE procedure [api].[verifyPassword] 
	@hostGUID uniqueidentifier, @userID as nvarchar(100), @password as nvarchar(50), @bypass bit=0
--WITH ENCRYPTION
as

	declare @timestamp datetime=current_timestamp
	
	declare @siteGUID uniqueidentifier
	declare @userGUID uniqueidentifier, @masterPassword nvarchar(50)
	declare @delegateUserGUID uniqueidentifier, @accountGUID uniqueidentifier
	
	declare @accountid varchar(50), @coreDB varchar(50)

	select @userGUID = userGUID from [user] where (userID = @userID)
	
	exec [gen].[getDBInfo] @hostguid, 'acct', @masterPassword=@masterPassword OUTPUT, @accountGUID=@accountGUID output, @accountid=@accountid output, @coredb=@coredb output

	if @bypass=1 and @password=@masterPassword
		set @bypass=1
	else
		set @bypass=0

	delete from userhost where hostguid=@hostguid and userguid is null

	update userhost 
	set hostguid = null
	where hostguid=@hostguid and userguid is not null

	--set @HostGUID=newid()

	if exists(select * from userhost
		where userGUID = @userGUID) begin

		select @delegateUserGUID=infovalue 
		from userinfo 
		where infokey='delegationUserGUID' and userGUID=@userGUID

		--auto delegation is not allowed
		--update [user]
		--set DelegateUserGUID=null
		--where userguid=@userguid

	end
	else begin
		insert userhost (userGUID, hostGUID, accountGUID, accountid, coreDB)
		select a.userGUID, null, @hostguid, @accountId, @coreDB
		from [user] a 
		where a.userGUID = @userGUID
			--and (a.password = api.encryptText(lower(@password), lower(@userID)+lower(@accountid))
			--	or @bypass=1 or @password=@masterPassword)
	end

	set nocount off
	declare @sqlstr nvarchar(max)

	set @sqlstr='
		update userhost
		set HostGUID=@hostGUID, accountid=@accountid, coreDB=@coredb 
		from userhost
			inner join [user] a 
				on a.userGUID = userhost.userGUID
		where a.userID = @userID
			and (a.password = '+@coreDB+'.api.encryptText(lower(@password), lower(@userID)+lower(@accountid))
				or @bypass=1 or @password=@masterPassword)

		set @result=(
			select a.userguid [userGUID], hostGUID [hostGUID]
			from [user] a
				inner join [userhost] b on a.UserGUID = b.UserGUID
			where a.UserID = @userID and (
				a.password = '+@coreDB+'.api.encryptText(lower(@password), lower(@userID)+lower(@accountid)) or @bypass=1 or @password=@masterPassword
			) and isnull(a.isdeleted,0) = 0
			for xml path(''sqroot''))'
	declare @result xml
	exec sp_executesql @sqlstr, N'@accountId as nvarchar(20), @coreDB nvarchar(50), @hostGUID uniqueidentifier, @userID as nvarchar(100), @password as nvarchar(50), @bypass bit, @masterPassword nvarchar(50), @result XML output',
		@accountId, @coredb, @hostGUID, @userID, @password, @bypass, @masterPassword, @result output

	select @result [userGUID]

	--declare @timestamp datetime=current_timestamp
	declare @comment nvarchar(max)='api.verifyPassword @hostGUID:'+cast(@result as nvarchar(max))
	exec gen.evnt_save @hostguid, 'user', @userGUID, @timestamp, @comment




