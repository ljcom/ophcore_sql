





CREATE procedure [api].[theme_browse_v3] 
	@hostGUID uniqueidentifier,
	@code varchar(100), 
	@sqlFilter varchar(max)='', 
	@searchText varchar(max)='', 
	@pgNo int=1, 
	@nbRows int=10,
	@sortOrder varchar(max)='', 
	@stateid varchar(10)=NULL, 
	@isdebug int=0
as

	if @sqlfilter !='' 
		set @sqlFilter = 'and ' +@sqlfilter

	declare @typecode varchar(1)
	declare @statecode varchar(1)='a'
	declare @setstatus nvarchar(100)
	declare @accountid varchar(50), @userGUID uniqueidentifier, @accountGUID uniqueidentifier

	select @userGUID=a.userGUID, @accountGUID=b.accountGUID, @accountid=accountid 
	from userhost a 
		inner join [user] b on a.userguid=b.userguid
		inner join acct c on b.AccountGUID=c.AccountGUID
	where hostguid=@hostguid

	if ISNUMERIC(@stateid)= 0 OR @stateid = NULL begin
		set @stateid = '0'
		set @setstatus = 'and status is not null '
	end
	else begin
		set @setstatus = 'and status ='+@stateid+' '
	end

	if (convert(int,@stateid) &lt; 400) set @statecode  ='a'
	else if (convert(int,@stateid) &gt; 499) set @statecode  ='c'
	else if (convert(int,@stateid) &lt; 500 and convert(int,@stateid) &gt; 399)  set @statecode = 'e'
	else set @statecode = 'a'

	if @isdebug=1 print 'statecode: ' + @statecode

	select @typecode = api.settingmode(settingmode) from modl where ModuleID=@code

	declare @acode varchar(14), @tblCode varchar(20)
	set @acode= left(@code,1)+'a'+substring(@code,3,len(@code)-2)
	set @tblCode = left(@code,1)+@statecode+substring(@code,3,len(@code)-2)
	if @isdebug=1 print 'acode: ' + @acode
	if @isdebug=1 print 'tblCode:' + @tblCode

	declare @totalPages int=0
	declare @sqlstr nvarchar(max), @sqlpar nvarchar(max), @db varchar(50), @docNo varchar(50), @refNo varchar(50), @docDate varchar(50), 
		@formGUID varchar(50),@id nvarchar(50)

	set @db=[api].[fn_checkDB](@code)
	exec [api].[getPrimaryKey] @accountid, @code, @formGUID OUTPUT
	--exec [api].[getPrimaryCol] @code, 1, @formGUID OUTPUT
	exec [api].[getPrimaryCol] @accountid, @code, 2, @docDate OUTPUT
	exec [api].[getPrimaryCol] @accountid, @code, 3, @docNo OUTPUT
	exec [api].[getPrimaryCol] @accountid, @code, 4, @refNo OUTPUT
	exec [api].[getPrimaryCol] @accountid, @code, 5, @id OUTPUT

	--Stateid for detail
	declare @PARNMODLGUID uniqueidentifier, @PARNCODE varchar(20), @PARNSTATE varchar(5)
	select @PARNMODLGUID = ParentModuleGUID from modl where ModuleID = @code

	if @PARNMODLGUID is NOT NULL begin
		print 'xxx'
		select @PARNCODE = ModuleID from modl where ModuleGUID = @PARNMODLGUID
		print @PARNCODE 
		set @sqlstr = 'select @stats=cast([Status] as varchar(5)) from '+@db+'.dbo.'+STUFF(@PARNCODE,2,1,'o')+' where 1=1 '+@sqlFilter
		exec sp_executesql @sqlstr, N'@stats varchar(5) OUTPUT', @stats = @PARNSTATE OUTPUT
		print 'Parent State: '+@PARNSTATE
	end

	declare @needStatus bit=0
	if exists(select * from modl where ModuleID=@code and @typecode='T' and parentmoduleguid is null) 
	begin
		set @needStatus=1
	end

	declare @isMaster bit =0
	if exists(select * from modl where ModuleID=@code and @typecode='M' and parentmoduleguid is null)
	begin 
		set @isMaster = 1
		if @sortorder =''
		set @sortorder = @id
	end
	
	print '@needStatus: ' + cast(@needStatus as varchar)
	print '@isMaster: ' + cast(@isMaster as varchar)

	if @sortorder = ''
	begin
		set @sqlstr = 'select @sortorder = orderbystr from '+@db+'.dbo.comodl where moduleid = '''+@code+''''
		exec sp_executesql @sqlstr, N'@sortorder nvarchar(max) output', @sortorder OUTPUT
	end

	declare @selectstr1 nvarchar(max),@selectstr2 nvarchar(max)
	set @sqlstr='
		set @selectstr1=stuff((
			select '', ''+colname
			--select b.* 
			from '+@db+'.gen.cotabl a
				inner join '+@db+'.gen.cotablfiel b
					on a.TableGUID=b.tableGUID
			where isbrowsable&gt;0 and primarycol is null and a.TableName like '''+@acode+'''
			--group by colname
			order by browseorder
			for xml path('''')),1,2,'''')
		set @selectstr2=stuff((
			select '', isnull(cast(''+case when b.combotype=12 then colname+''cbid''+''+'''' - ''''+''+colname+''cbnm'' else colname end +'' as varchar(max)),'''''''') ''+colname
			--select b.* 
			from '+@db+'.gen.cotabl a
				inner join '+@db+'.gen.cotablfiel b
					on a.TableGUID=b.tableGUID
			where isbrowsable&gt;0 and primarycol is null and a.TableName like '''+@acode+'''
			--group by colname
			order by browseorder
			for xml path('''')),1,2,'''')'
	set @sqlpar='@selectstr1 nvarchar(max) OUTPUT, @selectstr2 nvarchar(max) OUTPUT'

	--PRINT 'xx'
	if @isdebug=1 print @sqlstr
	if @isdebug=1 print @selectstr1
	if @isdebug=1 print @selectstr2

	exec sp_executesql @sqlstr, @sqlpar, @selectstr1 OUTPUT, @selectstr2 OUTPUT

	declare @randomText varchar(50)=replace(cast(newid() as varchar(50)), '-', '')

	print 'select1: ' + @selectstr1	
	print 'select2: ' + @selectstr2

	--mod sortorder andre
	declare @typesort nvarchar(5)
	if (SELECT CHARINDEX(' ', @sortorder)) &gt; 0 begin
		set @typesort = SUBSTRING(@sortorder, CHARINDEX(' ', @sortorder)+1, 4) 
		set @sortOrder = left(@sortorder, CHARINDEX(' ', @sortorder)-1)
	end
	else begin
		set @typesort = 'asc'
		set @sortOrder = @sortorder
	end

	set @sqlstr='
		select '+@formGUID+' formGUID, '''+@code+''' moduleid '+case when @needStatus=1 then ', Status, b.statename StatusLabel, StatusComment' else ','''' as Status ,'''' as StatusLabel ,'''' as StatusComment' end+'
		into ##browserows'+@randomText+'
		from '+@db+'.oph.'+@tblCode+' a
			inner join modl c
				on c.moduleid='''+@code+'''			
				'+case when @needstatus = 1 then 'left join modlstat b
				on b.moduleguid=c.moduleguid and b.stateid=a.status' else '' end 
	
	set @sqlstr=@sqlstr+'
		select x.*, titlecaption into ##browsefields'+@randomText+' 
		from (
			SELECT formGUID, fextKey, fextString, 0 mandatory
			FROM	
				(SELECT formGUID,createddate, '+
					case when @needstatus = 1 then @docNo+', '+@refNo+', '+@docDate+', ' when @isMaster = 1 then iif(@id='','', @id+', ') else '' end +@selectstr1+'
				FROM (
					select '+@formGUID+' formGUID ,isnull(cast(createddate as varchar(max)),'''') createddate,'+
						case when @needstatus=1 then ' 
						isnull(cast('+@docNo+' as varchar(max)),'''') '+@docNo+', 
						isnull(cast('+@refNo+' as varchar(max)),'''') '+@refNo+', 
						isnull(cast('+@docDate+' as varchar(max)),'''') '+@docDate+', ' 
						when @isMaster = 1 then
							iif(@id='','', 'isnull(cast('+@id+' as varchar(max)),'''') '+@id+', ')
						else '' end +
						@selectstr2+'
					from '+@db+'.oph.'+@tblCode+'
					where 1=1 '+case when @needstatus = 1 then ''+@setstatus+'' else '' end+ @sqlfilter+') to'+@code+') p
					
					UNPIVOT
						(fextString FOR fextKey IN 
							(createddate,'+case when @needstatus=1 then +@docNo+', '+@refNo+', '+@docDate+', ' when @isMaster = 1 then iif(@id='','', @id+', ') else '' end +@selectstr1+')
					)AS unpvt
				) x 
					inner join '+@db+'.gen.cotablfiel b
						on x.fextKey=b.colname				
					inner join '+@db+'.gen.cotabl a
						on a.TableGUID=b.tableGUID
				where  tablename like '''+@acode+''''

	set @sqlstr=@sqlstr+'
		update x
		set mandatory=primarycol
		--select colname, primarycol 
		from '+@db+'.gen.cotabl a
			inner join '+@db+'.gen.cotablfiel b
				on a.TableGUID=b.tableGUID
			inner join ##browsefields'+@randomText+' x 
				on x.fextKey=b.colname
		where primarycol is not null and tablename like '''+@acode+''''

	set @sqlstr=@sqlstr+'
		update x
		set mandatory=1
		--select colname, primarycol 
		from '+@db+'.gen.cotabl a
			inner join '+@db+'.gen.cotablfiel b
				on a.TableGUID=b.tableGUID
			inner join ##browsefields'+@randomText+' x 
				on x.fextKey=b.colname			
		where b.colname like''Status%'' and tablename like '''+@acode+''''

	set @sqlstr=@sqlstr+'
		delete from ##browsefields'+@randomText+'  where formguid not in(
			select distinct formguid From ##browsefields'+@randomText+'  where 1=1 and  (fextstring  like ''%'+@searchText+'%'' ))'

	set @sqlstr=@sqlstr+'
		delete from ##browserows'+@randomText+' where formguid not in(
			select distinct formguid From ##browsefields'+@randomText+'  where 1=1 and  (fextstring  like ''%'+@searchText+'%''))
		
			--select * from ##browserows'+@randomText+'
			--select * from ##browsefields'+@randomText+'

			--drop table ##browserows'+@randomText+'
			--drop table ##browsefields'+@randomText+'

			'+case when @sortorder !='' and not(@sortorder is null) 
				then 'select @isnumeric = isnumeric(fextstring) from ##browsefields'+@randomText+' where fextkey='''+@sortorder+'''' else '' end 

	if @isdebug=1 print @sqlstr
	
	declare @isnumeric bit =0

	declare @bl api.browseList, @bfl api.browseFieldList
	set @sqlpar=''--@bl as api.browseList OUTPUT, @bfl as api.browseFieldList OUTPUT'

	if @isdebug=1 print @sqlstr

	exec sp_executesql @sqlstr,N'@isnumeric bit output',@isnumeric output --, @sqlpar--, @bl OUTPUT, @bfl OUTPUT

	set @sqlstr = 'select @TotalRows = count(*) from ##browserows'+@randomText+''

	declare @TotalRows int

	exec sp_executesql @sqlstr,N'@TotalRows int output',@TotalRows output

	set @sqlstr = 
	case when @sortorder ='' or @sortorder is null then 'select RN as ordernumber,a.* from ##browserows'+@randomText+ ' as a join (select formguid,Rn from (select row_number() over(order by convert(datetime,fextstring) desc) as RN,formguid from (select fextstring as fextstring,formguid from ##browsefields'+@randomText+' where fextkey=''createddate'') as x )as y where RN&gt;'+convert(nvarchar(max),(@pgNo-1)*@nbRows)+' and RN&lt;='+convert(nvarchar(max),((@pgNo-1)*@nbRows)+@nbRows)+') as b on a.formguid = b.formguid'
	else 'select RN as ordernumber,
					a.* 
			from ##browserows'+@randomText+ ' as a 
			join (select formguid,Rn 
						from (select row_number() over(order by '+case when @isnumeric = 1 then 'convert(money,fextstring) 'else 'fextstring ' end +@typesort+') as RN,
									formguid 
							from (select fextstring as fextstring,formguid 
									from ##browsefields'+@randomText+' 
									where fextkey='''+@sortorder+''') as x )
							as y 
						where RN&gt;'+convert(nvarchar(max),(@pgNo-1)*@nbRows)+' and RN&lt;='+convert(nvarchar(max),((@pgNo-1)*@nbRows)+@nbRows)+') 
						as b 
			on a.formguid = b.formguid'
	end
	if @isdebug=1 print @sqlstr

	print 'xx'

	insert into @bl
	exec sp_executesql @sqlstr
	
	print 'xxx'
	if @isdebug=1 select * from @bl
	
	
	--set @sqlstr = 'select newid(),a.* from ##browsefields'+@randomText+ ' as a join (select formguid from (select row_number() over(order by formguid) as RN,formguid from (select distinct formguid from ##browsefields'+@randomText+')as x ) as y where RN&gt;'+convert(nvarchar(max),(@pgNo-1)*@nbRows)+' and RN&lt;='+convert(nvarchar(max),((@pgNo-1)*@nbRows)+@nbRows)+') as b on a.formguid = b.formguid'
	set @sqlstr = 'select newid(),a.* from ##browsefields'+@randomText+' a where formguid in(select formguid from @bl)'
	if @isdebug=1 print @sqlstr

	insert into @bfl
	exec sp_executesql @sqlstr,N'@bl api.browseList readonly',@bl

		if @isdebug=1 select * from @bfl order by formguid asc
		if @isdebug=1 select * from @bl order by formguid asc

	--untuk header by andre
	declare @headers nvarchar(max)
	set @headers = '
	select colname,  case when PrimaryCol is not null then 1 else 0 end [mandatory], BrowseColWidth, titlecaption, browseorder, browseColDigit, BrowseColAlign
	from '+@db+'.gen.cotabl a inner join '+@db+'.gen.cotablfiel b on b.tableGUID = a.tableGUID
	where a.TableName like '''+@acode+'''
		and isBrowsable = 1
	order by BrowseOrder asc'
		

	if OBJECT_ID('tempdb..#headers') is not null begin
		drop table #headers
	end
	create table #headers (colname nvarchar(30), mandatory int, browsecolwidth int, titlecaption nvarchar(50),browseorder int, browseColDigit int, BrowseColAlign int)

	insert into #headers
	exec (@headers)

	declare @browsexml xml
	select @browsexml = 
		--info
		--&lt;info&gt;
		--  &lt;code&gt;VEND&lt;/code&gt;
		--  &lt;description&gt;New Vendor Request&lt;/description&gt;
		--  &lt;state code="0"&gt;DRAFT&lt;/state&gt;
		--  &lt;searchText /&gt;
		--  &lt;nbRows&gt;10&lt;/nbRows&gt;
		--  &lt;pageNo&gt;1&lt;/pageNo&gt;
		--  &lt;nbPages&gt;1&lt;/nbPages&gt;
		(select 
		(select moduleid code, ModuleDescription description, --@searchText searchText, @pgNo pageNo, @nbRows nbRows, @totalPages nbPages,
		--permission
		--  &lt;permission&gt;
		--	&lt;allowAdd&gt;1&lt;/allowAdd&gt;
		--	&lt;allowEdit&gt;1&lt;/allowEdit&gt;
		--	&lt;allowDelete&gt;1&lt;/allowDelete&gt;
		--	&lt;allowWipe&gt;1&lt;/allowWipe&gt;
		--	&lt;allowArchieve&gt;1&lt;/allowArchieve&gt;
		--	&lt;allowBatchInsert&gt;1&lt;/allowBatchInsert&gt;
		--  &lt;/permission&gt;
			'' permission, 
		--states
		--  &lt;states&gt;
		--	&lt;state code="100" name="Pending"&gt;
		--	  &lt;substates&gt;
		--		&lt;substate code="0"&gt;Draft&lt;/substate&gt;
		--		&lt;substate code="100"&gt;On Approval&lt;/substate&gt;
		--		&lt;substate code="300"&gt;Rejected&lt;/substate&gt;
		--		&lt;substate code="399"&gt;Pending Release&lt;/substate&gt;
		--	  &lt;/substates&gt;
		--	&lt;/state&gt;
		--	&lt;state code="400" name="Approved"&gt;
		--	  &lt;substates&gt;
		--		&lt;substate code="400"&gt;Approved&lt;/substate&gt;
		--	  &lt;/substates&gt;
		--	&lt;/state&gt;
		--	&lt;state code="500" name="Closed"&gt;
		--	  &lt;substates&gt;
		--		&lt;substate code="500"&gt;Closed&lt;/substate&gt;
		--	  &lt;/substates&gt;
		--	&lt;/state&gt;
		--	&lt;state code="999" name="Deleted"&gt;
		--	  &lt;substates&gt;
		--		&lt;substate code="999"&gt;Deleted&lt;/substate&gt;
		--	  &lt;/substates&gt;
		--	&lt;/state&gt;
		--  &lt;/states&gt;
			'' states,
			isnull(@nbRows,0) nbRows,
			isnull(@pgNo,0) pageNo,
			isnull((@totalrows/@nbrows) + case when @totalrows % @nbrows &gt;0 then 1 else 0 end,0) as nbPages,
			@TotalRows as TotalRows,
			isNULL(@PARNSTATE, @stateid) as stateId
		from modl 
		where moduleid=@code
		for xml path(''), elements, type
			) info, 
		(select  colname '@fieldname', mandatory '@mandatory', BrowseColWidth '@width', titlecaption from #headers
			for xml path('column'), elements, type)
			header
		,
		--&lt;/info&gt;
		--columns
		--&lt;columns&gt;
		--  &lt;column fieldName="DocNo" mandatory="1" width="80"&gt;Doc No&lt;/column&gt;
		--  &lt;column fieldName="RefNo" mandatory="1" width="80"&gt;Ref No&lt;/column&gt;
		--  &lt;column fieldName="DocDate" mandatory="1" width="80"&gt;Date&lt;/column&gt;
		--  &lt;column fieldName="VendorNo" mandatory="0"&gt;Vendor No&lt;/column&gt;
		--  &lt;column fieldName="VendorName" mandatory="0"&gt;Vendor Name&lt;/column&gt;
		--  &lt;column fieldName="PurposeDescription" mandatory="0"&gt;Purpose Description&lt;/column&gt;

		--case when @needStatus = 1 then 
		--(select top 1000 fieldname '@fieldName', mandatory '@mandatory', width '@width', docStatus '@docStatus', titleCaption+''  
		--from (
		--	select 'DocNo' fieldName, 1 mandatory, 80 width, -4 colOrder, 'No' titleCaption, 0 docStatus union all
		--	select 'RefNo', 1, 80,-3, 'Ref No', 0 union all
		--	select 'DocDate', 1, 120, -2, 'Date', 0 union all
		----  &lt;column fieldName="docStatus" mandatory="0" docStatus="1" width="80" text-align="center"&gt;Status&lt;/column&gt;
		--	select 'DocStatus', 2, 80, -1, 'Status', 1 from modl where moduleid=@code and settingmode=0 union all
		--	select colKey, 0, 0, colOrder, titleCaption, 0  
		--	from modlcolm a 
		--		inner join modl b
		--			on a.ModuleGUID=b.ModuleGUID
		--	where b.moduleid=@code) x
		--order by colOrder
		--for xml path('column'), elements, type) 
		
		--when @isMaster = 1 then 
		--(select top 1000 fieldname '@fieldName', mandatory '@mandatory', width '@width', docStatus '@docStatus', titleCaption+''  
		--from (
		--	select 'id' fieldName, 1 mandatory, 80 width, -4 colOrder, 'ID' titleCaption, 0 docStatus
		--	from modlcolm a 
		--		inner join modl b
		--			on a.ModuleGUID=b.ModuleGUID
		--	where b.moduleid=@code) x
		--order by colOrder
		--for xml path('column'), elements, type) 

		--else '' end 'columns', 

		--&lt;/columns&gt;
		--rows
		--&lt;rows&gt;
		--  &lt;row code="VEND" GUID="CF549076-2773-4FF8-8129-230B6263479C" edit="1" delete="1" wipe="0" restore="0" force="0" reopen="0" approve="0" reject="0"&gt;
		(select moduleid '@code', formGUID '@GUID', 0 '@edit', 0 '@delete', 0 '@wipe', 0 '@restore', 0 '@force', 0 '@reopen', 0 '@approve', 0 '@reject', 
		--    &lt;fields&gt;
		--	    &lt;field caption="Doc No" mandatory="1"&gt;VQ10B0017&lt;/field&gt;
		--	    &lt;field caption="Ref No" mandatory="1"&gt;VQ10B0007&lt;/field&gt;
		--	    &lt;field caption="Doc Date" mandatory="1"&gt;01/01/2015&lt;/field&gt;
		--	    &lt;field caption="Vendor No"&gt;VENDORID&lt;/field&gt;
		--	    &lt;field caption="Vendor Name"&gt;PT VENDOR NAME&lt;/field&gt;
		--	    &lt;field caption="Purpose Description"&gt;THIS IS COMMENT&lt;/field&gt;
		--    &lt;/fields&gt;
			(select top 20 formKey '@caption',caption '@title', case when y.mandatory=0 then 0 else 1 end '@mandatory', browseColDigit '@digit', browseColAlign '@align'
			, formValue+'' 
			from @bfl y join #headers h on y.formKey = h.colname
			where y.formGUID=x.formGUID and y.mandatory&lt;&gt;1
			order by h.browseorder
			for xml path('field'), elements, type) fields, 
			--&lt;docStatus labelColor="success" title="RELEASE"&gt;Open/Draft. You cannot generate any Vendor since you don't have any approval level above you. Please make sure y&lt;/docStatus&gt;
			(select case status when 0 then 'info' when 100 then 'warning' when 300 then 'danger' when 400 then 'success' when 500 then 'info' end '@labelColor', 
				statusLabel '@title',
				statusComment+'' 
			from @bl y
			where y.formGUID=x.formGUID
			for xml path('docStatus'), elements, type), 
		--	  &lt;approvals&gt;
		--      &lt;approval&gt;&lt;/approval&gt;
		--    &lt;/approvals&gt;
			'' approvals,
		--	  &lt;talks&gt;
		--	    &lt;talk GUID="555209CB-E2E4-47C1-8B09-4025D8DE2349"&gt;
		--		  &lt;Message&gt;88&lt;/Message&gt;
		--		  &lt;userid&gt;Sam&lt;/userid&gt;
		--		  &lt;username&gt;samuel&lt;/username&gt;
		--		  &lt;sentdate&gt;05 Dec 2016&lt;/sentdate&gt;
		--	    &lt;/talk&gt;
		--	    &lt;talk GUID="EF39B46F-4A5F-425D-AF8B-E6C80C39B765"&gt;
		--		  &lt;Message&gt;0000&lt;/Message&gt;
		--		  &lt;userid&gt;Sam&lt;/userid&gt;
		--		  &lt;username&gt;samuel&lt;/username&gt;
		--		  &lt;sentdate&gt;05 Dec 2016&lt;/sentdate&gt;
		--	    &lt;/talk&gt;
		--	  &lt;/talks&gt;
			'' talks
		from @bl x
		order by ordernumber
		for xml path('row'), elements, type) content
		--  &lt;/row&gt;
		--&lt;/rows&gt;
		for xml path(''), elements, type)

	--select @browsexml

	declare @xmlheader as xml
	exec api.[theme_header] @code, null, null, 0, @xmlheader output

	
	select (
		select (
	--info
	--&lt;info&gt;
			select (
	--account
		--     &lt;account&gt;L'OR?AL&lt;/account&gt;
				select accountid account from acct a
					inner join modl b
						on a.AccountGUID=b.AccountGUID
				where moduleid=@code
				) account, 
	--themeFolder
		--     &lt;themeFolder&gt;themeONE&lt;/themeFolder&gt;
				(select infoValue  from acctinfo a
					inner join modl b
						on a.AccountGUID=b.AccountGUID
				where moduleid=@code
					and infoKey='themename') 'themeFolder',
	--title
		--     &lt;title&gt;&lt;/title&gt;
				(select ModuleDescription from modl where moduleid=@code) title, 
	--code
		--     &lt;code&gt;
		--       &lt;id&gt;HRRC&lt;/id&gt;
		--       &lt;name&gt;REQUEST FOR RECRUITMENT&lt;/name&gt;
		--     &lt;/code&gt;

				(
				select moduleid id, ModuleDescription name, @typecode as settingMode 
				from modl 
				where moduleid=@code for xml path(''), elements, type) code, 
	--user
		--     &lt;user&gt;
		--       &lt;userId&gt;Sam&lt;/userId&gt;
		--       &lt;userName&gt;Samuel Surya&lt;/userName&gt;
		--       &lt;userURL&gt;&lt;/userURL&gt;
		--       &lt;oriUserId /&gt;
		--       &lt;oriUserName /&gt;
		--       &lt;hostGUID&gt;3394C92E-C9C2-4F29-8889-E705A832C383&lt;/hostGUID&gt;
		--     &lt;/user&gt;
				(select userId, userName, '' userURL, hostGUID 
				from userhost a
					inner join [user] b
						on a.userguid=b.userguid
				where hostguid=@hostGUID
				for xml path(''), elements, type) [user]	 
			for xml path(''), elements, type
			) info, 
	--menus
	--&lt;menus&gt;
	--  &lt;menu code="sidebar"&gt;
	--    &lt;submenus&gt;
	--      &lt;submenu mode="label"&gt;
	--        &lt;caption&gt;MAIN NAVIGATION&lt;/caption&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID=""&gt;
	--        &lt;caption&gt;Dashboard&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--        &lt;icon&gt;
	--          &lt;fa&gt;fa-dashboard&lt;/fa&gt;
	--        &lt;/icon&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="" mode="treeroot"&gt;
	--        &lt;caption&gt;Modules&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--        &lt;icon&gt;
	--          &lt;fa&gt;fa-tasks&lt;/fa&gt;
	--        &lt;/icon&gt;
	--        &lt;submenus&gt;
	--          &lt;submenu GUID="" mode="treeview"&gt;
	--            &lt;mode&gt;treeview&lt;/mode&gt;
	--            &lt;caption&gt;Inventory&lt;/caption&gt;
	--            &lt;pageURL&gt;#&lt;/pageURL&gt;
	--            &lt;icon&gt;
	--              &lt;fa&gt;&lt;/fa&gt;
	--            &lt;/icon&gt;
	--            &lt;submenus&gt;
	--              &lt;submenu GUID="" mode="treeview"&gt;
	--                &lt;caption&gt;Consignment P&amp;#038;D&lt;/caption&gt;
	--                &lt;pageURL&gt;#&lt;/pageURL&gt;
	--                &lt;icon&gt;
	--                  &lt;fa&gt;&lt;/fa&gt;
	--                &lt;/icon&gt;
	--              &lt;/submenu&gt;
	--              &lt;submenu GUID="" mode="treeview"&gt;
	--                &lt;caption&gt;Direct P &amp;#038; D&lt;/caption&gt;
	--                &lt;pageURL&gt;#&lt;/pageURL&gt;
	--                &lt;icon&gt;
	--                  &lt;fa&gt;&lt;/fa&gt;
	--                &lt;/icon&gt;
	--              &lt;/submenu&gt;
	--              &lt;submenu GUID="" mode="treeview"&gt;
	--                &lt;caption&gt;PR/PVL Purchase&lt;/caption&gt;
	--                &lt;pageURL&gt;#&lt;/pageURL&gt;
	--                &lt;icon&gt;
	--                  &lt;fa&gt;&lt;/fa&gt;
	--                &lt;/icon&gt;
	--              &lt;/submenu&gt;
	--            &lt;/submenus&gt;
	--          &lt;/submenu&gt;
	--          &lt;submenu GUID="" mode="treeview"&gt;
	--            &lt;mode&gt;treeview&lt;/mode&gt;
	--            &lt;caption&gt;SAP Validation&lt;/caption&gt;
	--            &lt;pageURL&gt;#&lt;/pageURL&gt;
	--            &lt;icon&gt;
	--              &lt;fa&gt;&lt;/fa&gt;
	--            &lt;/icon&gt;
	--            &lt;submenus&gt;
	--              &lt;submenu GUID="" mode="treeview"&gt;
	--                &lt;caption&gt;New Vendor Request&lt;/caption&gt;
	--                &lt;pageURL&gt;#&lt;/pageURL&gt;
	--                &lt;icon&gt;
	--                  &lt;fa&gt;&lt;/fa&gt;
	--                &lt;/icon&gt;
	--              &lt;/submenu&gt;
	--            &lt;/submenus&gt;
	--          &lt;/submenu&gt;
	--        &lt;/submenus&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="" mode="treeroot"&gt;
	--        &lt;caption&gt;Reports&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--        &lt;icon&gt;
	--          &lt;fa&gt;fa-book&lt;/fa&gt;
	--        &lt;/icon&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID=""&gt;
	--        &lt;caption&gt;Settings&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--        &lt;icon&gt;
	--          &lt;fa&gt;fa-cog&lt;/fa&gt;
	--        &lt;/icon&gt;
	--      &lt;/submenu&gt;
	--    &lt;/submenus&gt;
	--  &lt;/menu&gt;
	--  &lt;menu code="newdocument"&gt;
	--    &lt;submenus&gt;
	--      &lt;submenu GUID="69073C10-AD35-4989-80E8-07B676E62D2E"&gt;
	--        &lt;code&gt;SAPV&lt;/code&gt;
	--        &lt;caption&gt;SAP Validation&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=VEND&amp;amp;ndb=1&amp;amp;mg=SAPV&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;1&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="2C4900AA-4F8F-4E1C-B938-21F735C8CC8B"&gt;
	--        &lt;code&gt;FXAS&lt;/code&gt;
	--        &lt;caption&gt;Fixed Asset&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=TaFASC&amp;amp;ndb=1&amp;amp;mg=FSAX&amp;amp;acc=EF_FXAS&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="5723268A-98CE-47B7-A005-47105750CA13"&gt;
	--        &lt;code&gt;EHRD&lt;/code&gt;
	--        &lt;caption&gt;Human Resources&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=taHRRR&amp;amp;ndb=1&amp;amp;mg=EHRD&amp;amp;acc=EF_EHRD&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="24E727CF-29ED-4968-A7C4-8DF5BEE2ED8A"&gt;
	--        &lt;code&gt;ITEQ&lt;/code&gt;
	--        &lt;caption&gt;IT Equipment&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=taIERQ&amp;amp;ndb=1&amp;amp;mg=ITEQ&amp;amp;acc=EF_ITEQ&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="C96F2DB4-C7CE-444F-91BC-F45ACD31A45A"&gt;
	--        &lt;code&gt;STRD&lt;/code&gt;
	--        &lt;caption&gt;STRAD Scientific&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=MaPAD9&amp;amp;ndb=1&amp;amp;mg=STRD&amp;amp;acc=EF_STRD&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="29C52B16-622A-42E0-B98B-F9C4EED5C261"&gt;
	--        &lt;code&gt;PROJ&lt;/code&gt;
	--        &lt;caption&gt;Project&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=TaPREQ&amp;amp;ndb=1&amp;amp;mg=PROJ&amp;amp;acc=EF_PROJ&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu GUID="4E2BFE53-00D7-450C-9440-BC1D1790542B"&gt;
	--        &lt;code&gt;FINA&lt;/code&gt;
	--        &lt;caption&gt;Finance&lt;/caption&gt;
	--        &lt;pageURL&gt;mode=browse&amp;amp;code=TaDEDU&amp;amp;ndb=1&amp;amp;mg=FINA&amp;amp;acc=EF_FINA&amp;amp;option=4&amp;amp;fact=&lt;/pageURL&gt;
	--        &lt;nbNew&gt;0&lt;/nbNew&gt;
	--        &lt;lvl&gt;10&lt;/lvl&gt;
	--      &lt;/submenu&gt;
	--    &lt;/submenus&gt;
	--  &lt;/menu&gt;
	--  &lt;menu code="primary"&gt;
	--    &lt;submenus&gt;
	--      &lt;submenu&gt;
	--        &lt;caption&gt;xx&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--        &lt;submenus&gt;
	--          &lt;submenu GUID=""&gt;
	--            &lt;caption&gt;My Profile&lt;/caption&gt;
	--            &lt;pageURL&gt;#&lt;/pageURL&gt;
	--          &lt;/submenu&gt;
	--          &lt;submenu GUID=""&gt;
	--            &lt;caption&gt;Account&lt;/caption&gt;
	--            &lt;pageURL&gt;#&lt;/pageURL&gt;
	--          &lt;/submenu&gt;
	--          &lt;submenu GUID=""&gt;
	--            &lt;caption&gt;Log Off&lt;/caption&gt;
	--            &lt;pageURL&gt;#&lt;/pageURL&gt;
	--          &lt;/submenu&gt;
	--        &lt;/submenus&gt;
	--      &lt;/submenu&gt;
	--    &lt;/submenus&gt;
	--  &lt;/menu&gt;
	--  &lt;menu code="footer"&gt;
	--    &lt;submenus&gt;
	--      &lt;submenu&gt;
	--        &lt;caption&gt;About Us&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--      &lt;/submenu&gt;
	--      &lt;submenu&gt;
	--        &lt;caption&gt;Help&lt;/caption&gt;
	--        &lt;pageURL&gt;#&lt;/pageURL&gt;
	--      &lt;/submenu&gt;
	--    &lt;/submenus&gt;
	--  &lt;/menu&gt;
	--&lt;/menus&gt;
			(select menucode '@code', 
				--submenus
				(select [type] '@type', Tag '@tag', SubMenuDescription [MenuDescription],  caption,  url pageURL, icon_fa fa, icon_url icon_url, 
					--submenus
					(select [type] '@type', Tag '@tag', SubMenuDescription [MenuDescription], caption,  url pageURL, icon_fa fa, icon_url icon_url
					from menusmnu c
					where c.uppersubmenuGUID=b.MenudetailGUID
					order by c.OrderNo, c.caption
					for xml path('submenu'), elements, type) submenus
				from menusmnu b
				where b.menuGUID=a.MenuGUID and b.upperSubmenuGUID is null
				order by OrderNo, b.caption
				for xml path('submenu'), elements, type) submenus
			from menu a
				inner join modl b
					on a.AccountGUID=b.AccountGUID
			where moduleid=@code
			order by OrderNo asc
			for xml path('menu'), elements, type) menus
		for xml path(''), elements, type
		--   &lt;/info&gt;
		) header,
		(select '' dashboard, @browsexml [browse], '' form
		for xml path('bodyContent'), elements, type) body,
		'' footer
	for xml path('sqroot')









