
CREATE procedure [core].[addModules] @accountid nvarchar(50)=null, @curV3DB nvarchar(50)=null, @isdelTable bit=0, @isMigrate bit=0, @isdebug bit=0
--WITH ENCRYPTION
as	
	if @isMigrate=1 begin
		DECLARE #curx CURSOR READ_ONLY FOR
			select 
				a.DatabaseName, AccountId, [version], migratedb, servername, ismaster,
				(select DatabaseName from acctdbse where version = '4.0' and isMaster = 1 and AccountGUID = b.AccountGUID)
			from acctdbse a
				inner join acct b on a.AccountGUID=b.AccountGUID
			where (isMaster=1) and AccountId = IIF(isNULL(@accountid, '') = '', AccountID, @accountid)
				and a.DatabaseName = IIF(isNULL(@curV3DB, '') = '', a.DatabaseName, @curV3DB)
			order by [version], ismaster desc

		DECLARE @V3DB varchar(50), @curAcct varchar(50), @curVer varchar(10), @v4db nvarchar(50), @dataDB varchar(50), @svr nvarchar(50), @ismaster bit
		OPEN #curx

		FETCH NEXT FROM #curx INTO @V3DB, @curAcct, @curVer, @v4db, @svr, @ismaster, @dataDB
		WHILE (@@fetch_status = 0)
		BEGIN
				if @isdebug=1 select @curAcct, @V3DB, @dataDB
				if @curVer='4.0' begin
					if @ismaster=1 exec core.addModule_v4 @curAcct, @V3DB, @isdebug
					exec core.addModule_createTables @accountid, @datadb, null, null, @isdelTable, @isdebug 
					if @v4db is not null exec [core].[addModule_v4_copy] @accountid, @datadb, @v4db, @isdeltable, @isdebug	--untuk migrasi perlu diisi data migrasi di master dan slavenya

				end
				else if @curVer='3.0' begin
					exec core.addModule_v3 @curAcct, @V3DB, @dataDB, @isdebug
					exec core.addReport_v3 @curAcct, @V3DB, @dataDB, @isdebug
				end
				else if @curVer='2.1' begin	--linked server
					exec core.addModule_v2_1 @curAcct, @V3DB, @dataDB, @isdebug
				end
				else if @curVer='2.0' begin	--maxfour data
					exec core.addModule_v2 @curAcct, @V3DB, @dataDB, @isdebug
					--exec core.addModule_createTable @accountid, @datadb, @v4db, @svr, @isdebug 
				end
		FETCH NEXT FROM #curx INTO @V3DB, @curAcct, @curVer, @v4db, @svr, @ismaster, @dataDB
		END
		CLOSE #curx DEALLOCATE #curx

		--exec core.addModule_insertScript @accountid, @dataDB, @isdebug
	end

	declare @sqlstr nvarchar(max)='
		exec '+@dataDB+'.gen.refreshviews'
	
	exec sp_executesql @sqlstr


