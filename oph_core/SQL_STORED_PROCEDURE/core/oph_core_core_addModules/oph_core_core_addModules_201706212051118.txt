

CREATE procedure [core].[addModules] @accountid nvarchar(50)=null, @curV3DB nvarchar(50)=null, @isdebug bit=0
--WITH ENCRYPTION
as	
	DECLARE #cur CURSOR READ_ONLY FOR
		select 
			a.DatabaseName, AccountId, [version], 
			(select DatabaseName from acctdbse where version = '4.0' and isMaster = 1 and AccountGUID = b.AccountGUID)
		from acctdbse a
			inner join acct b on a.AccountGUID=b.AccountGUID
		where isMaster=1 and AccountId = IIF(isNULL(@accountid, '') = '', AccountID, @accountid)
			and a.DatabaseName = IIF(isNULL(@curV3DB, '') = '', a.DatabaseName, @curV3DB)

	DECLARE @V3DB varchar(50), @curAcct varchar(50), @curVer varchar(10), @dataDB varchar(50)
	OPEN #cur

	FETCH NEXT FROM #cur INTO @V3DB, @curAcct, @curVer, @dataDB
	WHILE (@@fetch_status = 0)
	BEGIN
			if @isdebug=1 select @curAcct, @V3DB, @dataDB
			if @curVer='4.0' begin
				exec core.addModule_v4 @curAcct, @V3DB, @isdebug
				print 'exec core.addModule_v4 '''+@curAcct+''', '''+@V3DB+''', '''+@dataDB+''''
			end
			else if @curVer='3.0' begin
				exec core.addModule_v3 @curAcct, @V3DB, @dataDB, @isdebug
				exec core.addReport_v3 @curAcct, @V3DB, @dataDB, @isdebug
				print 'exec core.addModule_v3 '''+@curAcct+''', '''+@V3DB+''', '''+@dataDB+''''
			end
			else if @curVer='2.0' begin	--maxfour data
				exec core.addModule_v2 @curAcct, @V3DB, @dataDB, @isdebug
			end
	FETCH NEXT FROM #cur INTO @V3DB, @curAcct, @curVer, @dataDB
	END
	CLOSE #cur DEALLOCATE #cur


	exec core.addModule_insertScript @accountid, @dataDB, @isdebug





