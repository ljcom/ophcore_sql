


CREATE procedure [core].[migrateData_eachDB_v2] @accountid nvarchar(50), @coreDB nvarchar(50), 
	@dataDB nvarchar(50), @svr nvarchar(50), @v3db nvarchar(50)
as

	create table #migrate (DocGUID uniqueidentifier, AccountGUID uniqueidentifier, ModuleGUID uniqueidentifier, 
		DocNo nvarchar(50), DocRefNo nvarchar(50), DocDate datetime, DocSummary nvarchar(50), ID nvarchar(50), [Description] nvarchar(50), [Status] int, 
		StatusComment nvarchar(max), CreatedDate datetime, CreatedUser uniqueidentifier, isClosed bit, isDeleted bit)

	declare @accountGUID uniqueidentifier
	select @accountguid=AccountGUID 
	from acct where accountid=@accountid
	
	declare @uGUID uniqueidentifier=newid()	
	declare @sqlstr nvarchar(max)=N'

		select N''
			insert into '+@dataDB+'.dbo.docm (DocGUID, AccountGUID, ModuleGUID, 
				CreatedDate, updatedDate, isClosed, isDeleted, oldId)
			select newid(), '''''+cast(@accountguid as nvarchar(50))+''''', 
				''''''+isnull(cast(c.moduleguid as nvarchar(50)),''null'')+'''''', 
				isnull(''+isnull(d9.colkey, ''getdate()'')+'', getdate()), ''+isnull(d10.colkey, ''null'')+'', 0, isnull(''+isnull(d11.colkey, ''0'')+'', 0), 
				''+isnull(cast(d1.colKey as nvarchar(50)),''null'')+''  
			from '+@svr+'.'+@v3db+'.dbo.''+a.name+'' a
				left join (select docguid, oldid, moduleguid from '+@dataDB+'.dbo.docm) b 
					on cast(a.''+isnull(cast(d1.colKey as nvarchar(50)),''null'')+'' as nvarchar(50)) = b.oldid
						and b.moduleguid=''''''+isnull(cast(c.moduleguid as nvarchar(50)),''null'')+''''''
			where b.docGUID is null
			'' Insertstr, c.moduleid tablename--, b2.name APRVTableName
		into ##tempInsert'+replace(cast(@uGUID as nvarchar(50)), '-', '')+'
		from (select * from '+@svr+'.'+@v3db+'.sys.objects x where x.type=''U'') a 
			inner join '+@dataDB+'.dbo.modl c on c.moduleid=a.name
			inner join '+@dataDB+'.dbo.modlcolm d1 on c.moduleguid=d1.ModuleGUID 
				and d1.colorder=(
					select column_id
					from '+@svr+'.'+@v3db+'.sys.index_columns b 
						inner join '+@svr+'.'+@v3db+'.sys.indexes b1 on b.index_id=b1.index_id and b1.object_id=b.object_id
							and b1.is_primary_key=1
					where a.object_id=b.object_id)
			--left join '+@dataDB+'.dbo.modlcolm d7 on c.moduleguid=d7.ModuleGUID and d7.colkey=''Status''
			--left join '+@dataDB+'.dbo.modlcolm d8 on c.moduleguid=d8.ModuleGUID and d8.colkey=''StatusComment''
			left join '+@dataDB+'.dbo.modlcolm d9 on c.moduleguid=d9.ModuleGUID and d9.colkey=''createdDate''
			left join '+@dataDB+'.dbo.modlcolm d10 on c.moduleguid=d10.ModuleGUID and d10.colkey=''updatedDate''
			left join '+@dataDB+'.dbo.modlcolm d11 on c.moduleguid=d11.ModuleGUID and d11.colkey=''isDeleted''
		where left(a.name,1) not in (''C'', ''D'', ''P'')'
	
	print @sqlstr
	exec sp_executesql @sqlstr
	set @sqlstr='
	
		DECLARE #cur CURSOR
		READ_ONLY
		FOR select insertStr, tablename--, APRVTableName 
			from ##tempInsert'+replace(cast(@uGUID as nvarchar(50)), '-', '')+'
			order by tablename

		DECLARE @insertStr nvarchar(max), @tblName nvarchar(50), @aTblName nvarchar(50)
		OPEN #cur

		FETCH NEXT FROM #cur INTO @insertStr, @tblName--, @aTblName
		WHILE (@@fetch_status <> -1)
		BEGIN
			IF (@@fetch_status <> -2)
			BEGIN
				print @tblName
				print @insertStr
				exec sp_executesql @insertStr
				exec core.migrateData_addColumns_v2 '''+@accountid+''', '''+@coreDB+''',  '''+@datadb+''', '''+@svr+''', '''+@v3db+''', @tblName
				
				--if isnull(@aTblName, '''')<>'''' begin
				--	exec core.migrateData_addApproval '''+@accountid+''', '''+@coreDB+''',  '''+@datadb+''', '''+@v3db+''', @tblName
				--end
			END
			FETCH NEXT FROM #cur INTO @insertStr, @tblName--, @aTblName
		END

		CLOSE #cur
		DEALLOCATE #cur

		--talk migrate sekaligus
		--exec core.migrateData_addTalk '''+@accountid+''', '''+@coreDB+''',  '''+@datadb+''', '''+@v3db+'''
	'
	--print @sqlstr
	exec sp_executesql @sqlstr





